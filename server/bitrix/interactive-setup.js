#!/usr/bin/env node

/**
 * Interactive Bitrix Setup Script
 * This script will guide you through setting up the Smart Process
 */

const readline = require('readline');
const BitrixSetup = require('./setup-smart-process');
const fs = require('fs').promises;
const path = require('path');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

const question = (query) => new Promise((resolve) => rl.question(query, resolve));

async function runInteractiveSetup() {
  console.log('\n====================================');
  console.log('üé® Paint Estimator - Bitrix Setup');
  console.log('====================================\n');
  
  console.log('This wizard will help you:');
  console.log('1. Create a Smart Process in Bitrix');
  console.log('2. Add all required custom fields');
  console.log('3. Configure your application\n');
  
  // Get webhook URL
  console.log('Step 1: Bitrix Webhook Configuration');
  console.log('-------------------------------------');
  console.log('You need an inbound webhook from Bitrix.');
  console.log('Go to: Applications ‚Üí Webhooks ‚Üí Add Webhook');
  console.log('Grant CRM permissions and copy the URL.\n');
  
  const webhookUrl = await question('Enter your webhook URL: ');
  
  if (!webhookUrl || !webhookUrl.includes('bitrix24.com/rest/')) {
    console.error('\n‚ùå Invalid webhook URL');
    process.exit(1);
  }
  
  // Confirm before proceeding
  console.log('\n‚ö†Ô∏è  This will create:');
  console.log('   - A new Smart Process called "Paint Products"');
  console.log('   - 12 custom fields for product data');
  
  const proceed = await question('\nProceed? (yes/no): ');  
  if (proceed.toLowerCase() !== 'yes') {
    console.log('Setup cancelled.');
    process.exit(0);
  }
  
  console.log('\nStep 2: Creating Smart Process');
  console.log('------------------------------');
  
  // Run setup
  const setup = new BitrixSetup(webhookUrl);
  
  try {
    const result = await setup.runSetup();
    
    // Update config file
    console.log('\n\nStep 3: Updating Configuration');
    console.log('-------------------------------');
    
    const configPath = path.join(__dirname, 'config.js');
    const configContent = `// Bitrix Integration Configuration
// Generated by interactive setup

module.exports = {
  // Your Bitrix inbound webhook URL
  webhookUrl: '${webhookUrl}',
  
  // Bitrix user ID (usually 1 for admin)
  userId: 1,
  
  // Smart Process ID for Paint Products
  smartProcessId: ${result.smartProcessId},
  
  // Enable/disable automatic sync
  autoSync: true,
  
  // Sync interval in milliseconds (5 minutes)
  syncInterval: 5 * 60 * 1000,
  
  // Enable webhook listener for bi-directional sync
  enableWebhookListener: true,
  
  // Port for webhook listener (if enabled)
  webhookListenerPort: 3001
};`;

    await fs.writeFile(configPath, configContent);    console.log('‚úì Configuration file updated');
    
    // Test the connection
    console.log('\n\nStep 4: Testing Connection');
    console.log('--------------------------');
    const testConnection = await question('Test the connection now? (yes/no): ');
    
    if (testConnection.toLowerCase() === 'yes') {
      console.log('\nRunning connection test...\n');
      require('./test-connection');
    }
    
    console.log('\n\nüéâ Setup Complete!');
    console.log('==================');
    console.log('\nNext steps:');
    console.log('1. Start your server: npm run start:bitrix');
    console.log('2. Visit the admin panel to see products sync');
    console.log('3. Check Bitrix CRM ‚Üí Paint Products\n');
    
  } catch (error) {
    console.error('\n\n‚ùå Setup failed:', error.message);
    console.error('\nTroubleshooting:');
    console.error('1. Verify your webhook URL is correct');
    console.error('2. Ensure CRM permissions are granted');
    console.error('3. Check if Paint Products already exists');
  }
  
  rl.close();
}

// Run the setup
runInteractiveSetup().catch(console.error);